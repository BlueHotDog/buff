version: 2.1

restore_server_build: &restore_server_build
  restore_cache:
    keys:
      - v1-server-build-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
      - v1-server-build-cache-{{ .Branch }}
      - v1-server-build-cache

executors:
  my_exec:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true # default - false
    environment:
      MIX_ENV: test
      MINIO_HOST: "127.0.01"

commands:
  start_app:
    steps:
      - run: docker-compose up --no-build --no-start app
  restore_repo:
    steps:
      - restore_cache:
          keys:
            - v2-repo-{{ .Branch }}-{{ .Revision }}
            - v2-repo-{{ .Branch }}
            - v2-repo
  save_mix_deps:
    steps:
      - save_cache:
          key: v6-mix-cache-{{ checksum "mix.lock" }}
          paths:
            - deps
            - _build

  load_mix_deps:
    steps:
      - restore_cache:
          keys:
            - v6-mix-cache-{{ checksum "mix.lock" }}
            - v6-mix-cache

jobs:
  checkout_code:
    executor: my_exec
    working_directory: "/tmp/repo"
    steps:
      - restore_repo
      - checkout:
          path: "/tmp/repo/"
      - run: git gc
      - save_cache:
          key: v2-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - "/tmp/repo/"

  build_server:
    executor: my_exec
    working_directory: "/tmp/repo/server"
    steps:
      - restore_repo
      - run: mkdir deps
      - load_mix_deps
      - run: docker-compose build --build-arg MIX_ENV=test app
      - run: docker-compose up --no-deps --no-start --no-build app
      - run: docker cp `docker-compose ps -q app`:/app/deps .
      - run: sudo chown -R $USER:$USER .
      - run: docker cp `docker-compose ps -q app`:/app/_build .
      - save_mix_deps

  setup_db:
    executor: my_exec
    working_directory: "/tmp/repo/server"
    steps:
      - restore_repo
      - load_mix_deps
      - run: docker-compose run -e MIX_ENV=test app /wait-for-postgres.sh postgres mix ecto.setup

  coveralls:
    executor: my_exec
    working_directory: "/tmp/repo/server"
    steps:
      - restore_repo
      - load_mix_deps
      - run: docker-compose run  -e MIX_ENV=test app mix coveralls.json
      - run: docker-compose run  -e MIX_ENV=test app mix coveralls.html
      - run: bash <(curl -s https://codecov.io/bash)
      - store_artifacts:
          path: ./cover

  test_junit:
    executor: my_exec
    working_directory: "/tmp/repo/server"
    steps:
      - restore_repo
      - load_mix_deps
      - run: docker-compose run --volume /tmp/server_junit:/tmp/server_junit app mix test --formatter JUnitFormatter
      - store_test_results:
          path: /tmp/server_junit
      - store_artifacts:
          path: /tmp/server_junit
  quality:
    executor: my_exec
    working_directory: "/tmp/repo/server"
    steps:
      - restore_repo
      - load_mix_deps
      - run: docker-compose run app mix do format --check-formatted, credo --strict
      - run: docker-compose run app mix do xref deprecated --include-siblings, xref unreachable --include-siblings, xref graph --format stats

  dialyzer:
    executor: my_exec
    working_directory: "/tmp/repo/server"
    steps:
      - restore_repo
      - load_mix_deps
      - restore_cache:
          keys:
            - v2-plt-cache-{{ checksum "mix.lock" }}
            - v2-plt-cache
      # - run: docker-compose run app mix dialyzer --plt
      # - save_cache:
      #     key: v2-plt-cache-{{ checksum "mix.lock" }}
      #     paths:
      #       -  /var/lib/docker/volumes/repo_build
      #       - ~/.mix
      # - run: docker-compose run app mix dialyzer

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code
      - build_server:
          requires:
            - checkout_code
      - setup_db:
          requires:
            - build_server
      - coveralls:
          requires:
            - setup_db
      - test_junit:
          requires:
            - setup_db
      - quality:
          requires:
            - setup_db
      - dialyzer:
          requires:
            - setup_db

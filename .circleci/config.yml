version: 2.1


install_docker_compose: &install_docker_compose
  name: Install Docker Compose
  command: |
    curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
    chmod +x ~/docker-compose
    sudo mv ~/docker-compose /usr/local/bin/docker-compose

restore_server_build: &restore_server_build
  restore_cache:
    keys:
      - v1-server-build-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
      - v1-server-build-cache-{{ .Branch }}
      - v1-server-build-cache

# - run:
#     name: "Install Docker Compose"
#     command: |
#       curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
#       chmod +x ~/docker-compose
#       sudo mv ~/docker-compose /usr/local/bin/docker-compose

executors:
  my_exec:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true    # default - false
    environment:
      MIX_ENV: test
      MINIO_HOST: "127.0.01"

commands:
  restore_repo:
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Branch }}-{{ .Revision }}
            - v1-repo-{{ .Branch }}
            - v1-repo

jobs:
  checkout_code:
    executor: my_exec
    working_directory: "/tmp/repo"
    steps:
      - restore_repo
      - checkout:
          path: "/tmp/repo/"
      - run: git gc
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - "/tmp/repo/"

  build_server:
    executor: my_exec
    working_directory: "/tmp/repo/server"
    steps:
      - restore_repo
      - run: docker-compose build app

  test:
    executor: my_exec
    working_directory: "/tmp/repo/server"
    steps:
      - restore_repo
      - run: docker-compose up --detach app
      - run: docker-compose exec app /wait-for-postgres.sh postgres mix ecto.setup
      - run: docker-compose exec app mix test

  # # build_server_nodejs_deps:
  # #   <<: *docker_config
  # #   working_directory: ~/repo/server
  # #   steps:
  # #     - *restore_repo
  # #     # TODO when needed

  # test:
  #   <<: *docker_config
  #   working_directory: "/tmp/repo/server"
  #   steps:
  #     - *restore_repo
  #     - *restore_mix_deps
  #     - run: "mix local.hex --force"
  #     - run: "mix local.rebar --force"
  #     - run: *install_docker_compose
  #     - setup_remote_docker
  #     - run:
  #         name: Start container and verify it is working
  #         command: |
  #           set -x
  #           docker-compose up -d
  #           docker run --network container:minio \
  #             appropriate/curl --retry 10 --retry-delay 1 --retry-connrefused http://minio:9000
  #     - restore_cache:
  #         keys:
  #           - v1-plt-cache-{{ checksum "mix.lock" }}
  #           - v1-plt-cache
  #     - run: mkdir -p /tmp/server_junit/
  #     - run:
  #         name: Wait for DB
  #         command: dockerize -wait tcp://localhost:5432 -timeout 1m
  #     - run: MIX_ENV=test mix coveralls.json
  #     - run: bash <(curl -s https://codecov.io/bash)
  #     - run: MIX_ENV=test mix coveralls.html
  #     - run: mix test --formatter JUnitFormatter
  #     - run: "mix do xref deprecated --include-siblings, xref unreachable --include-siblings, xref graph --format stats"
  #     - store_artifacts:
  #         path: ./cover
  #     - store_test_results:
  #         path: /tmp/server_junit
  #     - store_artifacts:
  #         path: /tmp/server_junit
  #     - save_cache:
  #         key: v1-plt-cache-{{ checksum "mix.lock" }}
  #         paths:
  #           - _build
  #           - ~/.mix


workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code
      - build_server:
          requires:
            - checkout_code
      - test:
          requires:
            - build_server
